<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation=" 
          http://www.springframework.org/schema/beans 
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
          http://www.springframework.org/schema/tx 
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/context 
          http://www.springframework.org/schema/context/spring-context-3.0.xsd 
          http://www.springframework.org/schema/aop 
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-autowire="byName">
	
	<!-- <bean id="producerService" class="com.mq.queue.spring.ProducerServiceImpl">
		<property name="jmsTemplate" ref="jmsQueueTemplate" />
		<property name="destination" ref="queueDest" />
	</bean>

	<bean id="consumerService" class="com.mq.queue.spring.ConsumerServiceImpl">
		<property name="jmsTemplate" ref="jmsQueueTemplate" />
		<property name="destination" ref="queueDest" />
	</bean>
	
	发送消息的目的地（主题）
	<bean id="topicDest" class="org.apache.activemq.command.ActiveMQTopic">
		设置消息队列的名字
		<constructor-arg index="0" value="myTopic" />
	</bean>
	
	<bean id="publisherService" class="com.mq.topic.spring.PublisherServiceImpl">
		<property name="jmsTemplate" ref="jmsTopicTemplate" />
		<property name="destination" ref="topicDest" />
	</bean>

	<bean id="firstSubscriberService" class="com.mq.topic.spring.FirstSubscriberServiceImpl">
		<property name="jmsTemplate" ref="jmsTopicTemplate" />
		<property name="destination" ref="topicDest" />
	</bean>
	
	<bean id="secondSubscriberService" class="com.mq.topic.spring.SecondSubscriberServiceImpl">
		<property name="jmsTemplate" ref="jmsTopicTemplate" />
		<property name="destination" ref="topicDest" />
	</bean>
	
	配置TopicJms模板 
	<bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="defaultDestination" ref="topicDest" />
		配置是否为发布订阅者模式，默认为false
		<property name="pubSubDomain" value="true"/>
		<property name="receiveTimeout" value="10000" />
	</bean>
	
	配置JMS连接工厂
	<bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://localhost:61616" />
	</bean>
	发送消息的目的地（队列）
	<bean id="queueDest" class="org.apache.activemq.command.ActiveMQQueue">
		设置消息队列的名字
		<constructor-arg index="0" value="myQueue" />
	</bean>
	配置QueueJms模板 
	<bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="defaultDestination" ref="queueDest" />
		<property name="receiveTimeout" value="10000" />
	</bean> -->
	
	
	<context:annotation-config />
    <context:component-scan base-package="com.spring"/>
    <!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供-->
    <bean id="connectinFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
          <property name="brokerURL" value="tcp://localhost:61616" />
    </bean>
    <!-- Spring Caching连接工厂 -->
    <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
    <bean id="cachingConnectionFactory"
        class="org.springframework.jms.connection.CachingConnectionFactory">
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
        <property name="targetConnectionFactory" ref="connectinFactory"></property>
            <!-- Session缓存数量 -->
        <property name="sessionCacheSize" value="10"></property>
     </bean>
    <!-- 配置消息发送目的地方式 -->
    <!-- Queue队列：仅有一个订阅者会收到消息，消息一旦被处理就不会存在队列中 -->
    <bean id="mQueue2" class="org.apache.activemq.command.ActiveMQQueue">
         <constructor-arg index="0" value="MessageQueue2" />
    </bean>
     <!-- Spring JMS Template 配置JMS模版 -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
         <property name="connectionFactory" ref="cachingConnectionFactory" />
    </bean>
    <bean id="ListenerContainer"  
            class="org.springframework.jms.listener.DefaultMessageListenerContainer">  
            <property name="connectionFactory" ref="connectinFactory" />  
            <property name="receiveTimeout" value="1000" />  
            <property name="destination" ref="mQueue2" />  
            <property name="messageListener" ref="consumerThreadMessageListener" />  
            <property name="taskExecutor" ref="MessageExecutor"></property>  
            <property name="concurrentConsumers" value="7"></property>  
    </bean>  
    <bean id="MessageExecutor"  
        class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">  
        <property name="corePoolSize" value="20" />  
        <property name="maxPoolSize" value="100" />  
        <property name="daemon" value="true" />  
        <property name="keepAliveSeconds" value="120" />  
    </bean>  
    
    <bean id="messageThreadService" class="com.spring.thread.jms.MessageThreadService">
		<property name="jmsTemplate" ref="jmsQueueTemplate" />
		<property name="destination" ref="mQueue2" />
    </bean>
    
    <bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectinFactory" />
		<property name="defaultDestination" ref="mQueue2" />
		<property name="receiveTimeout" value="10000" />
	</bean>
	
</beans>
